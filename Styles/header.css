/* Input div */
#tuning {
  background-color: hsl(var(--font-color));
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  padding: 5px;
  font-size: clamp(.8rem, 3vw, 2.5rem);
  border-radius: 0;

  &:focus {  
    outline: none;
    background-color: hsl(var(--dark-accent), .8);
  }
  * {  color: hsl(var(--bg-color)); }
}

.input {
  display: grid;
  grid-area: "input";
  -webkit-user-select: none;
  user-select: none;
  grid-template:
  "tuning play notelen" 1fr
  "chord tech tech" 1fr / 1fr 1fr 1fr;
  gap: 10px 5px;
  margin: 10px;

  .tuning, .chord { justify-self: start; }
  .playback { justify-self: center; }
  .noteLength, .technique { justify-self: end; }
  svg {  fill: hsl(var(--font-color)); }

  @media (max-width: 600px) {
    grid-template:
    "tuning play" 1fr
    "tech tech" 1fr
    "chord notelen" 1fr / 1fr 1fr;
    .playback { justify-self: start; }
    @media (max-width: 400px) {
      row-gap: 9px;
      grid-template:
      "tuning" 1fr
      "tech" 1fr
      "notelen" 1fr
      "chord" 1fr
      "play" 1fr / 1fr;
      .tuning, .noteLength, .playback, .chord, .technique {
        width: 100%;
        justify-self: start;
      }
    }
  }
}

.tuning {
  grid-area: "tuning";
}

.playback {
  display: flex;
  grid-area: play;
  gap: 1rem;
  font-size: clamp(.5rem, 2vw, 2rem);

  input, svg {
    color: hsl(var(--font-color));
    height: clamp(1rem, 4vw, 2.5rem);
    width: clamp(4ch, 1vw, 5ch);
  }

  svg > path:hover {
    fill: hsl(var(--dark-accent));
  }
  
  input {
    outline: none;
    border: none;
    background-color: hsla(var(--dark-accent), .3);
    text-align: center;
    font-size: clamp(1rem, 1vw, 2rem);
    width: clamp(2.5rem, 2vw, 3rem);

    &:focus {  font-weight: bolder; }
    &:hover {  font-weight: bolder; }
    &::-webkit-outer-spin-button, &::-webkit-inner-spin-button {  display: none; }
  }
}

.noteLength {
  display: flex;
  grid-area: notelen;
  gap: 3px 6px;

  label {
    color: transparent;
    height: clamp(1.3rem, 7vw, 4rem);
    width: clamp(1.3rem, 7vw, 4rem);
    background-repeat: no-repeat;
    background-size: cover;
  }
}

.noteLength > input:checked + label {
  background-color: hsla(var(--light-accent), .75);
  z-index: 1;

  svg {  fill: hsl(var(--bg-color)); }
}

.chord { 
  grid-area: chord;
  font-size: clamp(.8rem, 3vw, 2.5rem);

  .toggle {
    padding: 5px;
  }
}

.chord > input:checked + label, 
.technique > input:checked + label {
  background-color: hsla(var(--light-accent), .75);
  color: hsl(var(--bg-color));
}

.technique {
  display: flex;
  grid-area: tech;
  gap: 3px 6px;

  label {
    justify-self: end;
    text-align: center;
    height: clamp(1rem, 7vw, 3.5rem);
    width: clamp(1rem, 7vw, 3.5rem);
    font-size: clamp(.5rem, 4vw, 2rem);
  }

  svg {
    fill: hsl(var(--font-color));
    width: clamp(1rem, 4vw, 1.5rem);
  }
}

.technique.expanded {
  width: 100%;
  gap: 1px 3px;
  /* grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); */
  justify-content: flex-end;

  label {
    height: clamp(1rem, 5vw, 2rem);
    width: clamp(1rem, 5vw, 2rem);
    font-size: clamp(.25rem, 2vw, 1rem);
  }
}

/* Repeating styling */
 
button, .input > div > * {
  cursor: pointer;
}

.chord > label, 
.noteLength > label,
.technique > label {
  border: 2px hsl(var(--font-color)) solid;
}

.chord > input:checked + label,
.noteLength > input:checked + label,
.technique > input:checked + label {  
  border: 2px hsl(var(--dark-accent)) solid;
}

header, 
.input, 
.playback, 
.noteLength {
  align-items: center;
}

/* Scale will be it's own property soon */
.technique, .noteLength, .chord {
  label:hover {
    transform: scale(1.05);
    background-color: hsla(var(--dark-accent), .75);
  }
  svg:hover {
    transform: scale(1.05);
    fill: hsla(var(--dark-accent), .75);
  }
}